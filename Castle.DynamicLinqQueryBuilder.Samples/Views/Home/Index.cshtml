@using Castle.DynamicLinqQueryBuilder.Samples.Sample
@{
    ViewBag.Title = "自定义查询首页";
}
@section scripts
{
    <script type="text/javascript">
    $(function() {
        // Handler for .ready() called.
        var tableData = [];

        var filterDefinition = @Html.Raw(ViewBag.FilterDefinition);
        var customFilters = {
            condition: 'AND',
            rules: []
        };
        var jqueryQueryBuilder = $('#jquery-query-builder');
        var jqueryQueryBuilderDom = jqueryQueryBuilder.queryBuilder({
            plugins: ['bt-tooltip-errors', 'filter-description'],
            //allow_groups: 0,
            allow_empty: true,
            filters: filterDefinition,
            rules: customFilters,
            lang_code:'zh-CN',
            icons: {
                add_group: 'fa fa-plus-square',
                add_rule: 'fa fa-plus-circle',
                remove_group: 'fa fa-minus-square',
                remove_rule: 'fa fa-minus-circle',
                error: 'fa fa-exclamation-triangle',
                sortable: 'fa fa-exclamation-triangle'
            }
        });

        var convertArraysToCommaDelimited = function(obj) {
            if (obj != null) {
                if (obj.hasOwnProperty("value")) {
                    if( Object.prototype.toString.call( obj.value ) === '[object Array]' ) {
                        obj.value = obj.value.join(", ");
                    }
                }
                if (obj.hasOwnProperty("rules") && obj.rules != null) {
                    for (var i = 0; i < obj.rules.length; i++) {
                        convertArraysToCommaDelimited(obj.rules[i]);
                    }
                }
            }
        }
        var getRules = function() {
            try {
                var res =  jqueryQueryBuilder.queryBuilder('getRules');
                convertArraysToCommaDelimited(res);
                return res;
            } catch (ex) {
                //console.log(ex);
                return null;
            }
        }

        var buildTable;
        var filterData = function() {

            $.ajax({
                type: 'POST',
                url: "../Home/Index",
                data: JSON.stringify(getRules()),
                success: function (returnPayload) {
                    tableData = returnPayload;
                    buildTable();
                    console && console.log ("request succeeded");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console && console.log ("request failed");
                },
                dataType: "json",
                contentType: "application/json",
                processData: false,
                async: true
            });
        }

        $('#applyFilter').on('click', function() {
            filterData();
        });
        buildTable = function() {
            var tbody = $('#data-table tbody'),
                props = ["FirstName",
                    "LastName",
                    "Birthday",
                    "Age",
                    "Address",
                    "City",
                    "State",
                    "ZipCode"];
            tbody.empty();
            $.each(tableData, function(i, reservation) {
                var tr = $('<tr>');
                $.each(props, function(i, prop) {
                    $('<td>').html(reservation[prop]).appendTo(tr);
                });
                tbody.append(tr);
            });
        };

        filterData();

    });

    $('#parse-sql').on('click', function () {
        var target = $(this).data('target');
        var result = $('#jquery-query-builder').queryBuilder('getSQL', $(this).data('stmt'));

        /*if (result.sql.length) {
            bootbox.alert({
                title: $(this).text(),
                message: '<pre class="code-popup">'
                + format4popup(result.sql)
                + (result.params ? '\n\n'
                    + format4popup(result.params) : '')
                + '</pre>'
            });
            }*/
        console.log(result.sql);
    });

    </script>
}

<div class="jumbotron">
    <h1>动态查询构造器（后台用Linq）</h1>
    <p class="lead">
        在运行时通过复杂查询动态过滤（对象）集合。
    </p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>自定义查询 </h2>
        <div id="jquery-query-builder"></div>
        <button id="applyFilter">查询 </button>
        <button id="parse-sql" data-target="import_export" data-stmt="false">打印sql(开发者模式)</button>
    </div>
    <div class="col-md-8">
        <h2>用户数据</h2>
        <table id="data-table">
            <thead>
                <tr>
                    <th>名字</th>
                    <th>姓</th>
                    <th>生日</th>
                    <th>地址</th>
                    <th>城市</th>
                    <th>州</th>
                    <th>邮政编码</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

</div>